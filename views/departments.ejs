<%- include('partials/layout', { title: 'Department List' }) %>

<div class="container mt-5">
  <div class="d-flex mb-2 justify-content-between">
    <h3>Departments</h3>

    <!-- Add new Department Modal -->
    <div>
      <button
        type="button"
        class="btn btn-primary"
        data-bs-toggle="modal"
        data-bs-target="#exampleModal"
      >
        Add new Department
      </button>

      <div
        class="modal fade"
        id="exampleModal"
        tabindex="-1"
        aria-labelledby="exampleModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">
                Add new Department
              </h5>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              ></button>
            </div>
            <div class="modal-body">
              <form id="departmentForm">
                <div class="mb-3">
                  <label for="departmentName" class="form-label">Name</label>
                  <input
                    type="text"
                    class="form-control"
                    id="departmentName"
                    required
                    placeholder="Insert Department name"
                  />
                </div>

                <div class="modal-footer">
                  <button
                    type="submit"
                    class="btn btn-primary"
                    id="addDepartmentButton"
                  >
                    Submit
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <table class="table">
    <thead>
      <tr>
        <th>Name</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody id="departmentTable">
      <!-- Department rows will be dynamically populated here -->
    </tbody>
  </table>

  <footer class="bg-light text-center py-3 mt-5">
    <p>&copy; 2025 Apollonia Dental Practice</p>
  </footer>

  <!-- Edit Department Modal -->
  <div>
    <div
      class="modal fade"
      id="editDepartmentModal"
      tabindex="-1"
      aria-labelledby="editDepartmentModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="editDepartmentModalLabel">
              Add new Department
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="editDepartmentForm">
              <div class="mb-3">
                <label for="departmentName" class="form-label">Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="editDepartmentName"
                  required
                />
              </div>

              <div class="modal-footer">
                <button
                  type="submit"
                  class="btn btn-primary"
                  id="editDepartmentButton"
                >
                  Submit
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Delete Department Modal -->
  <div
    class="modal fade"
    id="deleteConfirmationModal"
    tabindex="-1"
    aria-labelledby="deleteConfirmationModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deleteConfirmationModalLabel">
            Confirm Deletion
          </h5>
          <button
            type="button"
            class="close"
            data-dismiss="modal"
            aria-label="Close"
          >
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          Are you sure you want to delete this department?
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-danger" id="confirmDeleteButton">
            Delete
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>

<script
  src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
  integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
  crossorigin="anonymous"
></script>
<script
  src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
  integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
  crossorigin="anonymous"
></script>
<script
  src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"
  integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
  crossorigin="anonymous"
></script>

<script>
  let currentDepartmentId = null;
  let currentDepartment = null;

  // Employee fetching and actions
  document.addEventListener("DOMContentLoaded", function () {
    fetchDepartments();
  });

  function fetchDepartments() {
    fetch("/api/departments")
      .then((response) => response.json())
      .then((data) => {
        console.log("departments:", data);
        const table = document.getElementById("departmentTable");
        table.innerHTML = "";
        data.forEach((dept) => {
          const row = `
          <tr>
            <td>${dept.name}</td>
            <td>
              <button class="btn btn-warning" onclick="editDept('${dept._id}')">Edit</button>
              <button class="btn btn-danger" onclick="deleteDepartment('${dept._id}')">Delete</button>
            </td>
          </tr>
        `;
          table.innerHTML += row;
        });
      })
      .catch((err) => console.error("Error fetching departments:", err));
  }

  function editDept(id) {
    fetch(`/api/departments/${id}`)
      .then((response) => response.json())
      .then((data) => {
        currentDepartment = data;
        document.getElementById("editDepartmentName").value =
          currentDepartment.name;

        const departmentForm = document.getElementById("departmentForm");
        departmentForm.dataset.id = id;

        $("#editDepartmentModal").modal("show");
      })
      .catch((err) => console.error("Error fetching employee:", err));
  }

  document
    .getElementById("editDepartmentName")
    .addEventListener("input", (e) => {
      if (currentDepartment) {
        currentDepartment.name = e.target.value;
      }
    });

  document
    .getElementById("editDepartmentForm")
    .addEventListener("submit", function (e) {
      e.preventDefault();

      if (currentEmployee) {
        fetch(`/api/departments/${currentEmployee._id}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(currentDepartment),
        })
          .then((response) => {
            if (!response.ok) throw new Error("Failed to update employee");
            return response.json();
          })
          .then(() => {
            $("#editDepartmentModal").modal("hide");
            fetchDepartments();
            currentDepartment = null;
            currentDepartmentId = null;
          })
          .then(() => {
            document.getElementById("editDepartmentName").value = "";
            window.location.href = "/departments";
          })
          .catch((err) => console.error("Error updating employee:", err));
      }
    });

  function deleteDepartment(id) {
    currentDepartmentId = id;
    $("#deleteConfirmationModal").modal("show");
  }
  document
    .getElementById("confirmDeleteButton")
    .addEventListener("click", function () {
      if (!currentEmployeeId) return;

      fetch(`/api/department/${currentEmployeeId}`, {
        method: "DELETE",
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error("Failed to delete employee");
          }
          return response.json();
        })
        .then(() => {
          $("#deleteConfirmationModal").modal("hide"); // Hide the modal
          fetchDepartments();
          currentDepartmentId = null; // Reset the stored employee ID
        })
        .catch((err) => {
          console.error("Error deleting department:", err);
          alert("Failed to delete department. Please try again.");
        });
    });

  /* document
    .getElementById("departmentForm")
    .addEventListener("submit", function (e) {
      e.preventDefault();

      const name = document.getElementById("departmentName").value;
      const data = { name };

      fetch("/api/departments", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      })
        .then((response) => response.json())
        .then(() => {
          fetchDepartments();
          console.log("Department added successfully");
        })
        .then(() => {
          document.getElementById("departmentName").value = "";
          window.location.href = "/departments";
        })
        .catch((err) => console.error("Error:", err));
    }); */
</script>
